[
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
              "duration": 432000000,
=======
              "duration": 723000000,
>>>>>>> Stashed changes
=======
              "duration": 450000000,
>>>>>>> master
=======
<<<<<<< Updated upstream
              "duration": 450000000,
=======
              "duration": 2000000,
>>>>>>> Stashed changes
>>>>>>> master
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
              "duration": 3000000,
=======
              "duration": 4000000,
>>>>>>> Stashed changes
=======
              "duration": 2000000,
>>>>>>> master
=======
<<<<<<< Updated upstream
              "duration": 2000000,
=======
>>>>>>> Stashed changes
>>>>>>> master
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 12,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:46.905Z",
=======
        "start_timestamp": "2020-05-09T10:32:41.756Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:01.554Z",
>>>>>>> master
        "line": 17,
=======
        "start_timestamp": "2020-05-10T14:00:45.366Z",
        "line": 18,
>>>>>>> Stashed changes
        "name": "The project leader searches for available developers",
        "description": "",
        "id": "search-for-available-developers;the-project-leader-searches-for-available-developers",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "The project leader searches for available developers for the project and activity",
            "match": {
              "location": "acceptance_tests.steps.SystemSteps.theProjectLeaderSearchesForAvailableDevelopersForTheProjectAndActivity()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.408Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.586Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.093Z",
>>>>>>> master
        "line": 21,
=======
        "start_timestamp": "2020-05-10T14:00:45.423Z",
        "line": 22,
>>>>>>> Stashed changes
        "name": "A developer searches for available developers",
        "description": "",
        "id": "search-for-available-developers;a-developer-searches-for-available-developers",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 23,
            "name": "The project leader searches for available developers for the project and activity",
            "match": {
              "location": "acceptance_tests.steps.SystemSteps.theProjectLeaderSearchesForAvailableDevelopersForTheProjectAndActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "an error message \"Only the project leader may search for available developers\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Only the project leader may search for available developers\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Search for available developers",
    "description": "  Description: A projectleader searches for available developers for an activity\n  Actors: Project leader",
    "id": "search-for-available-developers",
    "keyword": "Feature",
    "uri": "file:use_cases/SearchAvailableDevelopers.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is an uninitialized project and an activity in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.417Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.606Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.109Z",
>>>>>>> master
        "line": 17,
=======
        "start_timestamp": "2020-05-10T14:00:45.431Z",
        "line": 18,
>>>>>>> Stashed changes
        "name": "Activity is successfully added to an initialized project",
        "description": "",
        "id": "add-activities-to-an-initialized-project;activity-is-successfully-added-to-an-initialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "the project leader is the active user",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectLeaderIsTheActiveUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "the activity with name \"Coding\" is in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project and an activity in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.425Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.617Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.123Z",
>>>>>>> master
        "line": 24,
=======
        "start_timestamp": "2020-05-10T14:00:45.439Z",
        "line": 25,
>>>>>>> Stashed changes
        "name": "Activity is unsuccessfully added to an initialized project",
        "description": "",
        "id": "add-activities-to-an-initialized-project;activity-is-unsuccessfully-added-to-an-initialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "There is a Developer with first name \"Birte\" and last name \"Rasmussen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Birte\"",
                  "offset": 37
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "the project leader is not the active user",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectLeaderIsNotTheActiveUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 30,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "an error message \"Only the project leader has access to add activities when the project is initialized\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Only the project leader has access to add activities when the project is initialized\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Add activities to an initialized project",
    "description": "  Description: A developer adds an activity to an initialized project\n  Actors: Developer",
    "id": "add-activities-to-an-initialized-project",
    "keyword": "Feature",
    "uri": "file:use_cases/addActivityToInitializedProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.433Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.630Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.134Z",
>>>>>>> master
        "line": 14,
=======
        "start_timestamp": "2020-05-10T14:00:45.445Z",
        "line": 15,
>>>>>>> Stashed changes
        "name": "Activity is added to an uninitialized project",
        "description": "",
        "id": "add-activities-to-an-uninitialized-project;activity-is-added-to-an-uninitialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the activity with name \"Coding\" is in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.441Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.640Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.146Z",
>>>>>>> master
        "line": 19,
=======
        "start_timestamp": "2020-05-10T14:00:45.451Z",
        "line": 20,
>>>>>>> Stashed changes
        "name": "Activity is added to an uninitialized project",
        "description": "",
        "id": "add-activities-to-an-uninitialized-project;activity-is-added-to-an-uninitialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "the activity with name \"Coding\" is in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "an error message \"Not a valid name\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Not a valid name\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Add activities to an uninitialized project",
    "description": "  Description: A developer adds an activity to an uninitialized project\n  Actors: Developer",
    "id": "add-activities-to-an-uninitialized-project",
    "keyword": "Feature",
    "uri": "file:use_cases/addActivityToUninitializedProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.447Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.650Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.160Z",
>>>>>>> master
        "line": 6,
=======
        "start_timestamp": "2020-05-10T14:00:45.461Z",
        "line": 7,
>>>>>>> Stashed changes
        "name": "A developer is successfully added to the system",
        "description": "",
        "id": "add-a-developer-to-the-system;a-developer-is-successfully-added-to-the-system",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 1000000,
=======
              "duration": 2000000,
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "the developer is in the system with an appropriate ID",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsInTheSystemWithAnAppropriateID()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.453Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.667Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.171Z",
>>>>>>> master
        "line": 11,
=======
        "start_timestamp": "2020-05-10T14:00:45.468Z",
        "line": 12,
>>>>>>> Stashed changes
        "name": "print all developers",
        "description": "",
        "id": "add-a-developer-to-the-system;print-all-developers",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "All developers are printed",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.allDevelopersArePrinted()"
            },
            "keyword": "When "
          }
        ]
      }
    ],
    "name": "Add a developer to the system",
    "description": "  Description: A developer is added to the system\n  Actors: Developer",
    "id": "add-a-developer-to-the-system",
    "keyword": "Feature",
    "uri": "file:use_cases/addDeveloperToSystem.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-10T10:04:02.179Z",
        "line": 5,
=======
        "start_timestamp": "2020-05-10T14:00:45.473Z",
        "line": 6,
>>>>>>> Stashed changes
        "name": ": There is a developer and a project registered in the system",
        "description": "",
        "id": "assign-personal-activities;:-there-is-a-developer-and-a-project-registered-in-the-system",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "there is a personal activity with name \"Skiferie\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Skiferie\"",
                  "offset": 39
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAPersonalActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "the personal activity is added to the developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.thePersonalActivityIsAddedToTheDeveloper()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the developer contains the personal activity",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperContainsThePersonalActivity()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Assign personal activities",
    "description": "  Description: The developer is sick\n  Actors: Developer",
    "id": "assign-personal-activities",
    "keyword": "Feature",
    "uri": "file:use_cases/addPersonalActivity.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.459Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.677Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.189Z",
>>>>>>> master
        "line": 13,
=======
        "start_timestamp": "2020-05-10T14:00:45.479Z",
        "line": 14,
>>>>>>> Stashed changes
        "name": "A developer is successfully being added as project leader to a project",
        "description": "",
        "id": "add-project-leader-to-project;a-developer-is-successfully-being-added-as-project-leader-to-a-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the project with name \"Enigma Codebreaker\" has the developer as project leader",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 22
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theProjectWithNameHasTheDeveloperAsProjectLeader(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.467Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.687Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.198Z",
>>>>>>> master
        "line": 20,
=======
        "start_timestamp": "2020-05-10T14:00:45.486Z",
        "line": 21,
>>>>>>> Stashed changes
        "name": "A developer is successfully added as project leader to a project with an existing project leader",
        "description": "",
        "id": "add-project-leader-to-project;a-developer-is-successfully-added-as-project-leader-to-a-project-with-an-existing-project-leader",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "a developer with first name \"Birte\" and last name \"Rasmussen\" is added to the system",
            "match": {
              "arguments": [
                {
                  "val": "\"Birte\"",
                  "offset": 28
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 50
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.aDeveloperWithFirstNameAndLastNameIsAddedToTheSystem(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "the project with name \"Enigma Codebreaker\" has the developer with first name \"Birte\" and last name \"Rasmussen\" as project leader",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 22
                },
                {
                  "val": "\"Birte\"",
                  "offset": 77
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 99
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theProjectWithNameHasTheDeveloperWithFirstNameAndLastNameAsProjectLeader(java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.474Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.699Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.207Z",
>>>>>>> master
        "line": 26,
=======
        "start_timestamp": "2020-05-10T14:00:45.495Z",
        "line": 27,
>>>>>>> Stashed changes
        "name": "print project with projectleader",
        "description": "",
        "id": "add-project-leader-to-project;print-project-with-projectleader",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "the project with name \"Enigma Codebreaker\" has the developer as project leader",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 22
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theProjectWithNameHasTheDeveloperAsProjectLeader(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Add project leader to project",
    "description": "  Description: A developer is being added as project leader\n  Actors: Developer",
    "id": "add-project-leader-to-project",
    "keyword": "Feature",
    "uri": "file:use_cases/addProjectLeaderToProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.484Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.708Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.216Z",
>>>>>>> master
        "line": 17,
=======
        "start_timestamp": "2020-05-10T14:00:45.501Z",
        "line": 18,
>>>>>>> Stashed changes
        "name": "A project leader assigns a developer to an activty",
        "description": "",
        "id": "assign-developer-to-project-activity;a-project-leader-assigns-a-developer-to-an-activty",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "the activity has the developer assigned",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheDeveloperAssigned()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "the developer has the activty on his or hers activity list",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperHasTheActivtyOnHisHersActivityList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is a developer and a project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.492Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.718Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.225Z",
>>>>>>> master
        "line": 23,
=======
        "start_timestamp": "2020-05-10T14:00:45.508Z",
        "line": 24,
>>>>>>> Stashed changes
        "name": "A non-project leader tries to assign a developer to an activty",
        "description": "",
        "id": "assign-developer-to-project-activity;a-non-project-leader-tries-to-assign-a-developer-to-an-activty",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "There is a Developer with first name \"Birthe\" and last name \"Rasmussen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Birthe\"",
                  "offset": 37
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 29,
            "name": "an error message \"Only the project leader has access to assign developers to activities\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Only the project leader has access to assign developers to activities\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Assign developer to project-activity",
    "description": "  Description: The project leader assigns a developer to an activity in the project\n  Actor: Project leader",
    "id": "assign-developer-to-project-activity",
    "keyword": "Feature",
    "uri": "file:use_cases/assignDeveloperToActivity.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "There is an uninitialized project and an activity in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.502Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.735Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.237Z",
>>>>>>> master
        "line": 15,
=======
        "start_timestamp": "2020-05-10T14:00:45.515Z",
        "line": 16,
>>>>>>> Stashed changes
        "name": "The developer tries to change the project date without being the active developer",
        "description": "",
        "id": "change-project-name;the-developer-tries-to-change-the-project-date-without-being-the-active-developer",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "an error message \"You don\u0027t have access\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"You don\u0027t have access\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project and an activity in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 2000000,
=======
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.511Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.745Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.253Z",
>>>>>>> master
        "line": 19,
=======
        "start_timestamp": "2020-05-10T14:00:45.522Z",
        "line": 20,
>>>>>>> Stashed changes
        "name": "The developer tries to set planned hours for the activity",
        "description": "",
        "id": "change-project-name;the-developer-tries-to-set-planned-hours-for-the-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "The activity planned hours is set to 10.0",
            "match": {
              "arguments": [
                {
                  "val": "10.0",
                  "offset": 37
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityPlannedHoursIsSetTo(java.lang.Double)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 22,
            "name": "an error message \"You don\u0027t have access\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"You don\u0027t have access\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project and an activity in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 2000000,
=======
<<<<<<< HEAD
              "duration": 3000000,
=======
>>>>>>> master
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "The project is initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsInitialized()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.518Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.754Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.266Z",
>>>>>>> master
        "line": 23,
=======
        "start_timestamp": "2020-05-10T14:00:45.534Z",
        "line": 24,
>>>>>>> Stashed changes
        "name": "The developer tries to set date for the activity",
        "description": "",
        "id": "change-project-name;the-developer-tries-to-set-date-for-the-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 26,
            "name": "an error message \"You don\u0027t have access\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"You don\u0027t have access\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Change project name",
    "description": "  Description: A developer tries to change an initialized project\n  Actors: Developer",
    "id": "change-project-name",
    "keyword": "Feature",
    "uri": "file:use_cases/modifyInitializedProjectIllegally.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
<<<<<<< Updated upstream
=======
              "duration": 1000000,
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 1000000,
=======
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.526Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.770Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.279Z",
>>>>>>> master
        "line": 13,
=======
        "start_timestamp": "2020-05-10T14:00:45.540Z",
        "line": 14,
>>>>>>> Stashed changes
        "name": "The project name is changed",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-name-is-changed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The name of the project is changed to \"Maintenance Work\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Maintenance Work\"",
                  "offset": 38
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theNameOfTheProjectIsChangedTo(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "There is a project registered in the system with name \"Maintenance Work\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Maintenance Work\"",
                  "offset": 54
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.thereIsAProjectRegisteredInTheSystemWithName(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< HEAD
<<<<<<< Updated upstream
              "duration": 1000000,
=======
              "duration": 3000000,
>>>>>>> Stashed changes
=======
              "duration": 2000000,
>>>>>>> master
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
<<<<<<< HEAD
<<<<<<< Updated upstream
=======
              "duration": 1000000,
>>>>>>> Stashed changes
=======
              "duration": 1000000,
>>>>>>> master
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.540Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.785Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.297Z",
>>>>>>> master
        "line": 17,
=======
        "start_timestamp": "2020-05-10T14:00:45.546Z",
        "line": 18,
>>>>>>> Stashed changes
        "name": "The project start date is set and the end date is null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-start-date-is-set-and-the-end-date-is-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 20,
            "name": "The project has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 34
                },
                {
                  "val": "30",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.547Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.802Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.306Z",
>>>>>>> master
        "line": 21,
=======
        "start_timestamp": "2020-05-10T14:00:45.551Z",
        "line": 22,
>>>>>>> Stashed changes
        "name": "The project end date is set and the start date is null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-end-date-is-set-and-the-start-date-is-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "The end date of the project is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "The project has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 32
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.554Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.810Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.315Z",
>>>>>>> master
        "line": 25,
=======
        "start_timestamp": "2020-05-10T14:00:45.556Z",
        "line": 26,
>>>>>>> Stashed changes
        "name": "The project start date is set and the end date is not null but valid",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-start-date-is-set-and-the-end-date-is-not-null-but-valid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "The end date of the project is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "The project has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 32
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "The project has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 34
                },
                {
                  "val": "30",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 1000000,
=======
              "duration": 2000000,
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.559Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.821Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.325Z",
>>>>>>> master
        "line": 31,
=======
        "start_timestamp": "2020-05-10T14:00:45.562Z",
        "line": 32,
>>>>>>> Stashed changes
        "name": "The project end date is set and the start date is not null but valid",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-end-date-is-set-and-the-start-date-is-not-null-but-valid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "The project has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 34
                },
                {
                  "val": "30",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 35,
            "name": "The end date of the project is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 36,
            "name": "The project has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 32
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
=======
              "duration": 2000000,
>>>>>>> Stashed changes
=======
              "duration": 1000000,
>>>>>>> master
=======
>>>>>>> master
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.566Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.832Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.337Z",
>>>>>>> master
        "line": 37,
=======
        "start_timestamp": "2020-05-10T14:00:45.569Z",
        "line": 38,
>>>>>>> Stashed changes
        "name": "The project start date is set and the end date is not null and not valid",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-start-date-is-set-and-the-end-date-is-not-null-and-not-valid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 39,
            "name": "The end date of the project is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 40,
            "name": "The project has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 32
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 41,
            "name": "The start date of the project is set to year 2020 and week 40",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "40",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 42,
            "name": "an error message \"Invalid date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.573Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.840Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.346Z",
>>>>>>> master
        "line": 45,
=======
        "start_timestamp": "2020-05-10T14:00:45.574Z",
        "line": 44,
>>>>>>> Stashed changes
        "name": "The project start date is set and the end date is not null and not valid",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-start-date-is-set-and-the-end-date-is-not-null-and-not-valid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 45,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 46,
            "name": "The project has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 34
                },
                {
                  "val": "30",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 47,
            "name": "The end date of the project is set to year 2020 and week 25",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "25",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 48,
            "name": "an error message \"Invalid date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.579Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.853Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.355Z",
>>>>>>> master
        "line": 53,
=======
        "start_timestamp": "2020-05-10T14:00:45.579Z",
        "line": 50,
>>>>>>> Stashed changes
        "name": "The activity start date is set and the end date is null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-start-date-is-set-and-the-end-date-is-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 51,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 52,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.585Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.867Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.364Z",
>>>>>>> master
        "line": 57,
=======
        "start_timestamp": "2020-05-10T14:00:45.584Z",
        "line": 54,
>>>>>>> Stashed changes
        "name": "The activity end date is set and the start date is null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-end-date-is-set-and-the-start-date-is-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 55,
            "name": "The end date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "30",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 56,
            "name": "The activity has the ending year 2020 and the ending week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "30",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.590Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.878Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.374Z",
>>>>>>> master
        "line": 61,
=======
        "start_timestamp": "2020-05-10T14:00:45.588Z",
        "line": 58,
>>>>>>> Stashed changes
        "name": "set start date for activity that doesnt exist",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;set-start-date-for-activity-that-doesnt-exist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 59,
            "name": "The start date of a nonexistent activity is set",
            "match": {
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfANonexistentActivityIsSet()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 60,
            "name": "an error message \"Project doesn\u0027t exist\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Project doesn\u0027t exist\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.598Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.890Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.384Z",
>>>>>>> master
        "line": 65,
=======
        "start_timestamp": "2020-05-10T14:00:45.593Z",
        "line": 62,
>>>>>>> Stashed changes
        "name": "The activity start date is set and the end date is not null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-start-date-is-set-and-the-end-date-is-not-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 63,
            "name": "The end date of the activity is set to year 2020 and week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 64,
            "name": "The activity has the ending year 2020 and the ending week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 65,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 66,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.605Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.900Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.396Z",
>>>>>>> master
        "line": 71,
=======
        "start_timestamp": "2020-05-10T14:00:45.599Z",
        "line": 68,
>>>>>>> Stashed changes
        "name": "The activity end date is set and the start date is not null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-end-date-is-set-and-the-start-date-is-not-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 69,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 70,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 71,
            "name": "The end date of the activity is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "35",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 72,
            "name": "The activity has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "35",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.612Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.907Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.406Z",
>>>>>>> master
        "line": 77,
=======
        "start_timestamp": "2020-05-10T14:00:45.604Z",
        "line": 74,
>>>>>>> Stashed changes
        "name": "The activity start date is set and the project start date is not null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-start-date-is-set-and-the-project-start-date-is-not-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 75,
            "name": "The start date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "30",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 76,
            "name": "The project has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 34
                },
                {
                  "val": "30",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 77,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 78,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.618Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.917Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.416Z",
>>>>>>> master
        "line": 83,
=======
        "start_timestamp": "2020-05-10T14:00:45.610Z",
        "line": 80,
>>>>>>> Stashed changes
        "name": "The activity end date is set and the project end date is not null",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-activity-end-date-is-set-and-the-project-end-date-is-not-null",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 81,
            "name": "The end date of the project is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 82,
            "name": "The project has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 32
                },
                {
                  "val": "35",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theProjectHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 83,
            "name": "The end date of the activity is set to year 2020 and week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "35",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 84,
            "name": "The activity has the ending year 2020 and the ending week 35",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "35",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.626Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.928Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.426Z",
>>>>>>> master
        "line": 89,
=======
        "start_timestamp": "2020-05-10T14:00:45.617Z",
        "line": 86,
>>>>>>> Stashed changes
        "name": "An invalid activity start date is set",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;an-invalid-activity-start-date-is-set",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 87,
            "name": "The end date of the activity is set to year 2020 and week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 88,
            "name": "The activity has the ending year 2020 and the ending week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 89,
            "name": "The start date of the activity is set to year 2020 and week 34",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "34",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 90,
            "name": "an error message \"Invalid date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.637Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.940Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.436Z",
>>>>>>> master
        "line": 97,
=======
        "start_timestamp": "2020-05-10T14:00:45.622Z",
        "line": 92,
>>>>>>> Stashed changes
        "name": "An invalid activity end date is set",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;an-invalid-activity-end-date-is-set",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 93,
            "name": "The start date of the activity is set to year 2020 and week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "32",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 94,
            "name": "The activity has the starting year 2020 and the starting week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "32",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 95,
            "name": "The end date of the activity is set to year 2020 and week 31",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "31",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 96,
            "name": "an error message \"Invalid date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Invalid date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.643Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.949Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.444Z",
>>>>>>> master
        "line": 105,
=======
        "start_timestamp": "2020-05-10T14:00:45.626Z",
        "line": 98,
>>>>>>> Stashed changes
        "name": "The project start date is set but the activity start date is before that",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-start-date-is-set-but-the-activity-start-date-is-before-that",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 99,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 100,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 101,
            "name": "The start date of the project is set to year 2020 and week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 45
                },
                {
                  "val": "32",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theStartDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 102,
            "name": "an error message \"Activity start dates are before the set date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Activity start dates are before the set date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.649Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.960Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.452Z",
>>>>>>> master
        "line": 113,
=======
        "start_timestamp": "2020-05-10T14:00:45.631Z",
        "line": 104,
>>>>>>> Stashed changes
        "name": "The project end date is set but the activity end date is after that",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;the-project-end-date-is-set-but-the-activity-end-date-is-after-that",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 105,
            "name": "The end date of the activity is set to year 2020 and week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 44
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theEndDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 106,
            "name": "The activity has the ending year 2020 and the ending week 32",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 33
                },
                {
                  "val": "32",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheEndingYearAndTheEndingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 107,
            "name": "The end date of the project is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 43
                },
                {
                  "val": "30",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.IntervalSteps.theEndDateOfTheProjectIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 108,
            "name": "an error message \"Activity end dates are after the set date\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Activity end dates are after the set date\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 6,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.655Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.968Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.460Z",
>>>>>>> master
        "line": 119,
=======
        "start_timestamp": "2020-05-10T14:00:45.635Z",
        "line": 110,
>>>>>>> Stashed changes
        "name": "Set date for projectID that doesnt exist",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;set-date-for-projectid-that-doesnt-exist",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 111,
            "name": "The start date of a project that doesnt exist is set",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theStartDateOfAProjectThatDoesntExistIsSet()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 112,
            "name": "an error message \"Project doesn\u0027t exist\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Project doesn\u0027t exist\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
<<<<<<< Updated upstream
      },
      {
        "line": 5,
        "name": "There is an uninitialized project registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.661Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.974Z",
>>>>>>> Stashed changes
=======
        "start_timestamp": "2020-05-10T10:04:02.468Z",
>>>>>>> master
        "line": 123,
        "name": "print project",
        "description": "",
        "id": "change-project-name--dates--and-activities-in-the-project;print-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 124,
            "name": "the project is printed",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsPrinted()"
            },
            "keyword": "When "
          }
        ]
=======
>>>>>>> Stashed changes
      }
    ],
    "name": "Change project name, dates, and activities in the project",
    "description": "  Description: A developer changes an uninitialized project\n  Actors: Developer",
    "id": "change-project-name--dates--and-activities-in-the-project",
    "keyword": "Feature",
    "uri": "file:use_cases/modifyProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.667Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.981Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.477Z",
>>>>>>> master
        "line": 6,
=======
        "start_timestamp": "2020-05-10T14:00:45.640Z",
        "line": 7,
>>>>>>> Stashed changes
        "name": "A developer creates and registers a project",
        "description": "",
        "id": "create-a-project;a-developer-creates-and-registers-a-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "the project is registered in the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsRegisteredInTheSystem()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project ID fits the current date",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIDFitsTheCurrentDate()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Create a project",
    "description": "  Description: A developer creates a project\n  Actors: Developer",
    "id": "create-a-project",
    "keyword": "Feature",
    "uri": "file:use_cases/registerProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.675Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.989Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.488Z",
>>>>>>> master
        "line": 19,
=======
        "start_timestamp": "2020-05-10T14:00:45.644Z",
        "line": 20,
>>>>>>> Stashed changes
        "name": "Activity is succesfully removed from an initialized project",
        "description": "",
        "id": "remove-activities-from-an-initialized-project;activity-is-succesfully-removed-from-an-initialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "the project leader is the active user",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectLeaderIsTheActiveUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "the activity with name \"Coding\" is removed from the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsRemovedFromTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "the activity with name \"Coding\" is not in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsNotInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.683Z",
=======
        "start_timestamp": "2020-05-09T10:32:42.999Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.499Z",
>>>>>>> master
        "line": 25,
=======
        "start_timestamp": "2020-05-10T14:00:45.649Z",
        "line": 26,
>>>>>>> Stashed changes
        "name": "Activity is unsuccesfully removed from an initialized project",
        "description": "",
        "id": "remove-activities-from-an-initialized-project;activity-is-unsuccesfully-removed-from-an-initialized-project",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "There is a Developer with first name \"Birte\" and last name \"Rasmussen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Birte\"",
                  "offset": 37
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 30,
            "name": "the project leader is not the active user",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectLeaderIsNotTheActiveUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "the activity with name \"Coding\" is removed from the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsRemovedFromTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "an error message \"Only the project leader has access to remove activities from a project\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Only the project leader has access to remove activities from a project\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Remove activities from an initialized project",
    "description": "  Description: A developer removes an activity from an initialized project\n  Actors: Developer",
    "id": "remove-activities-from-an-initialized-project",
    "keyword": "Feature",
    "uri": "file:use_cases/removeActivityFromInitializedProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 1000000,
=======
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.689Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.010Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.511Z",
>>>>>>> master
        "line": 17,
=======
        "start_timestamp": "2020-05-10T14:00:45.653Z",
        "line": 18,
>>>>>>> Stashed changes
        "name": "Activity is removed from an uninitialized project without any developers on the activity",
        "description": "",
        "id": "remove-activities-from-project;activity-is-removed-from-an-uninitialized-project-without-any-developers-on-the-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "the activity with name \"Coding\" is removed from the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsRemovedFromTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "the activity with name \"Coding\" is not in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsNotInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "The project has not been initialized",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectHasNotBeenInitialized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.697Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.019Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.519Z",
>>>>>>> master
        "line": 22,
=======
        "start_timestamp": "2020-05-10T14:00:45.658Z",
        "line": 23,
>>>>>>> Stashed changes
        "name": "Activity is removed from an uninitialized project developers on the activity",
        "description": "",
        "id": "remove-activities-from-project;activity-is-removed-from-an-uninitialized-project-developers-on-the-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "the activity with name \"Coding\" is removed from the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsRemovedFromTheProject(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "the activity with name \"Coding\" is not in the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsNotInTheProject(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Remove activities from project",
    "description": "  Description: A developer removes an activity from a project\n  Actors: Developer",
    "id": "remove-activities-from-project",
    "keyword": "Feature",
    "uri": "file:use_cases/removeActivityFromUnitializedProject.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.704Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.028Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.526Z",
>>>>>>> master
        "line": 15,
=======
        "start_timestamp": "2020-05-10T14:00:45.663Z",
        "line": 16,
>>>>>>> Stashed changes
        "name": "",
        "description": "",
        "id": "remove-a-developer-from-the-system;",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the developer is being removed from the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsBeingRemovedFromTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the developer is not contained in the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsNotContainedInTheSystem()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "the activty does not contain the developer",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivtyDoesNotContainTheDeveloper()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Remove a developer from the system",
    "description": "  Description: A developer is removed from the system\n  Actors: Developer",
    "id": "remove-a-developer-from-the-system",
    "keyword": "Feature",
    "uri": "file:use_cases/removeDeveloperFromSystem.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "there is a personal activity with name \"Skiferie\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Skiferie\"",
                  "offset": 39
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAPersonalActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "the personal activity is added to the developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.thePersonalActivityIsAddedToTheDeveloper()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-10T10:04:02.537Z",
        "line": 11,
=======
        "start_timestamp": "2020-05-10T14:00:45.667Z",
        "line": 12,
>>>>>>> Stashed changes
        "name": "",
        "description": "",
        "id": "removing-a-personal-activity;",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer removes the personal activity",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperRemovesThePersonalActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "the personal activity is not contained in the developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.thePersonalActivityIsNotContainedInTheDeveloper()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "removing a personal activity",
    "description": "  Description: A developer removes a personal activity\n  Actors: Developer",
    "id": "removing-a-personal-activity",
    "keyword": "Feature",
    "uri": "file:use_cases/removePersonalActivity.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is a developer registered in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "a developer hasn\u0027t been selected as an active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.aDeveloperHasnTBeenSelectedAsAnActiveDeveloper()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.710Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.037Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.548Z",
>>>>>>> master
        "line": 13,
=======
        "start_timestamp": "2020-05-10T14:00:45.671Z",
        "line": 14,
>>>>>>> Stashed changes
        "name": "A developer is set as the active developer",
        "description": "",
        "id": "the-active-developer-is-chosen;a-developer-is-set-as-the-active-developer",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the developer is the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsTheActiveDeveloper()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "the active developer is chosen",
    "description": "  Description: A user selects a developer as active developer in the system\n  Actors: Developer",
    "id": "the-active-developer-is-chosen",
    "keyword": "Feature",
    "uri": "file:use_cases/setActiveDeveloper.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the activity has the developer assigned",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheDeveloperAssigned()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the developer has the activty on his or hers activity list",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperHasTheActivtyOnHisHersActivityList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.715Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.044Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.560Z",
>>>>>>> master
        "line": 21,
=======
        "start_timestamp": "2020-05-10T14:00:45.675Z",
        "line": 22,
>>>>>>> Stashed changes
        "name": "A developer set worked hours for the activity with no planned hours",
        "description": "",
        "id": "the-active-developer-is-chosen;a-developer-set-worked-hours-for-the-activity-with-no-planned-hours",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 25,
            "name": "The developer sets their worked hours for the activity to 8.0",
            "match": {
              "arguments": [
                {
                  "val": "8.0",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperSetsTheirWorkedHoursForTheActivityTo(java.lang.Double)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "The developer and activity worked hours are 8.0",
            "match": {
              "arguments": [
                {
                  "val": "8.0",
                  "offset": 44
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAndActivityWorkedHoursAre(java.lang.Double)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the activity has the developer assigned",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheDeveloperAssigned()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the developer has the activty on his or hers activity list",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperHasTheActivtyOnHisHersActivityList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.721Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.052Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.575Z",
>>>>>>> master
        "line": 27,
=======
        "start_timestamp": "2020-05-10T14:00:45.682Z",
        "line": 28,
>>>>>>> Stashed changes
        "name": "A developer set worked hours for the activity with planned hours",
        "description": "",
        "id": "the-active-developer-is-chosen;a-developer-set-worked-hours-for-the-activity-with-planned-hours",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 29,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "The activity planned hours is set to 10.0",
            "match": {
              "arguments": [
                {
                  "val": "10.0",
                  "offset": 37
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityPlannedHoursIsSetTo(java.lang.Double)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "The developer sets their worked hours for the activity to 8.0",
            "match": {
              "arguments": [
                {
                  "val": "8.0",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperSetsTheirWorkedHoursForTheActivityTo(java.lang.Double)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "The developer and activity worked hours are 8.0",
            "match": {
              "arguments": [
                {
                  "val": "8.0",
                  "offset": 44
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAndActivityWorkedHoursAre(java.lang.Double)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the activity has the developer assigned",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheDeveloperAssigned()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the developer has the activty on his or hers activity list",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperHasTheActivtyOnHisHersActivityList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.727Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.060Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.587Z",
>>>>>>> master
        "line": 35,
=======
        "start_timestamp": "2020-05-10T14:00:45.687Z",
        "line": 36,
>>>>>>> Stashed changes
        "name": "A developer set invalid worked hours for the activity",
        "description": "",
        "id": "the-active-developer-is-chosen;a-developer-set-invalid-worked-hours-for-the-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 37,
            "name": "The start date of the activity is set to year 2020 and week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 46
                },
                {
                  "val": "30",
                  "offset": 60
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theStartDateOfTheActivityIsSetToYearAndWeek(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 38,
            "name": "The activity has the starting year 2020 and the starting week 30",
            "match": {
              "arguments": [
                {
                  "val": "2020",
                  "offset": 35
                },
                {
                  "val": "30",
                  "offset": 62
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheStartingYearAndTheStartingWeek(int,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 39,
            "name": "The developer sets their worked hours for the activity to 0.4",
            "match": {
              "arguments": [
                {
                  "val": "0.4",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperSetsTheirWorkedHoursForTheActivityTo(java.lang.Double)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 40,
            "name": "an error message \"Please provide a valid input\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Please provide a valid input\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 7,
        "name": "There is an uninitialized project in the system",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 8,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 16,
            "name": "the active developer assigns the developer to the activity",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperAssignsTheDeveloperToTheActivity()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the activity has the developer assigned",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theActivityHasTheDeveloperAssigned()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the developer has the activty on his or hers activity list",
            "match": {
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperHasTheActivtyOnHisHersActivityList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.732Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.069Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.596Z",
>>>>>>> master
        "line": 42,
=======
        "start_timestamp": "2020-05-10T14:00:45.692Z",
        "line": 43,
>>>>>>> Stashed changes
        "name": "Set worked hours on a not yet started activity",
        "description": "",
        "id": "the-active-developer-is-chosen;set-worked-hours-on-a-not-yet-started-activity",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 44,
            "name": "The developer sets their worked hours for the activity to 1.0",
            "match": {
              "arguments": [
                {
                  "val": "1.0",
                  "offset": 58
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.theDeveloperSetsTheirWorkedHoursForTheActivityTo(java.lang.Double)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 45,
            "name": "an error message \"The activity is not started yet\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"The activity is not started yet\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "the active developer is chosen",
    "description": "  Description: A user selects a developer as active developer in the system\n  Actors: Developer",
    "id": "the-active-developer-is-chosen",
    "keyword": "Feature",
    "uri": "file:use_cases/setWorkedAndPlannedHours.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 6,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
<<<<<<< Updated upstream
              "duration": 2000000,
=======
>>>>>>> Stashed changes
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.738Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.076Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.608Z",
>>>>>>> master
        "line": 15,
=======
        "start_timestamp": "2020-05-10T14:00:45.697Z",
        "line": 16,
>>>>>>> Stashed changes
        "name": "A developer removes an uninitialized registered project succesfully",
        "description": "",
        "id": "remove-a-project;a-developer-removes-an-uninitialized-registered-project-succesfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "the active developer removes the project from the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theActiveDeveloperRemovesTheProjectFromTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 18,
            "name": "the project is not contained in the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsNotContainedInTheSystem()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 19,
            "name": "the project does not contain any activities",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectDoesNotContainAnyActivities()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 6,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.745Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.086Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.619Z",
>>>>>>> master
        "line": 21,
=======
        "start_timestamp": "2020-05-10T14:00:45.702Z",
        "line": 22,
>>>>>>> Stashed changes
        "name": "A project leader removes his registered project succesfully",
        "description": "",
        "id": "remove-a-project;a-project-leader-removes-his-registered-project-succesfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "the active developer removes the project from the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theActiveDeveloperRemovesTheProjectFromTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 25,
            "name": "the project is not contained in the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsNotContainedInTheSystem()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 26,
            "name": "the project does not contain any activities",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectDoesNotContainAnyActivities()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 6,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "There is a Developer with first name \"Ole\" and last name \"Smith\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Ole\"",
                  "offset": 37
                },
                {
                  "val": "\"Smith\"",
                  "offset": 57
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 10,
            "name": "A project with name \"Enigma Codebreaker\" is created",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 20
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.aProjectWithNameIsCreated(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 11,
            "name": "The project is added to the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 12,
            "name": "there is an activity with name \"Coding\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 31
                }
              ],
              "location": "acceptance_tests.steps.ActivitySteps.thereIsAnActivityWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "the activity with name \"Coding\" is added to the project",
            "match": {
              "arguments": [
                {
                  "val": "\"Coding\"",
                  "offset": 23
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theActivityWithNameIsAddedToTheProject(java.lang.String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
        "start_timestamp": "2020-05-09T10:31:47.752Z",
=======
        "start_timestamp": "2020-05-09T10:32:43.096Z",
>>>>>>> Stashed changes
=======
=======
<<<<<<< Updated upstream
>>>>>>> master
        "start_timestamp": "2020-05-10T10:04:02.627Z",
>>>>>>> master
        "line": 28,
=======
        "start_timestamp": "2020-05-10T14:00:45.705Z",
        "line": 29,
>>>>>>> Stashed changes
        "name": "a developer removes an initialized project unsuccesfully",
        "description": "",
        "id": "remove-a-project;a-developer-removes-an-initialized-project-unsuccesfully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "the developer is set as project leader for project with name \"Enigma Codebreaker\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Enigma Codebreaker\"",
                  "offset": 61
                }
              ],
              "location": "acceptance_tests.steps.ProjectSteps.theDeveloperIsSetAsProjectLeaderForProjectWithName(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "There is a Developer with first name \"Birte\" and last name \"Rasmussen\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Birte\"",
                  "offset": 37
                },
                {
                  "val": "\"Rasmussen\"",
                  "offset": 59
                }
              ],
              "location": "acceptance_tests.steps.DeveloperSteps.thereIsADeveloperWithFirstNameAndLastName(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 32,
            "name": "the developer is added to the system",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsAddedToTheSystem()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 33,
            "name": "The developer is set as the active developer",
            "match": {
              "location": "acceptance_tests.steps.DeveloperSteps.theDeveloperIsSetAsTheActiveDeveloper()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 34,
            "name": "the project leader is not the active user",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theProjectLeaderIsNotTheActiveUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 35,
            "name": "the active developer removes the project from the system",
            "match": {
              "location": "acceptance_tests.steps.ProjectSteps.theActiveDeveloperRemovesTheProjectFromTheSystem()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 36,
            "name": "an error message \"Only the project leader has access to remove the project\" is given",
            "match": {
              "arguments": [
                {
                  "val": "\"Only the project leader has access to remove the project\"",
                  "offset": 17
                }
              ],
              "location": "acceptance_tests.steps.SystemSteps.anErrorWithMessageIsGiven(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Remove a project",
    "description": "  Description: A developer or project leader removes a project\n  Actors: Developer\\project leader",
    "id": "remove-a-project",
    "keyword": "Feature",
    "uri": "file:use_cases/unregisterProject.feature",
    "tags": []
  }
]